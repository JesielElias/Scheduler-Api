// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Scheduler.Api.Models;

namespace Scheduler.Api.Migrations
{
    [DbContext(typeof(SchedulerDbContext))]
    partial class SchedulerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Scheduler.Api.Models.EventModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdRoom")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("IdRoom");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Scheduler.Api.Models.RoomModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sala 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sala 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sala 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Sala 4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sala 5"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Sala 6"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Sala 7"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Sala 8"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Sala 9"
                        });
                });

            modelBuilder.Entity("Scheduler.Api.Models.EventModel", b =>
                {
                    b.HasOne("Scheduler.Api.Models.RoomModel", "Room")
                        .WithMany("Events")
                        .HasForeignKey("IdRoom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
